@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @* Check if the current page is not the UserProfile page *@
    @if (!(ViewContext.RouteData.Values["controller"]!.ToString() == "Account" && ViewContext.RouteData.Values["action"]!.ToString() == "UserProfile"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Profile" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
    }
    <li class="nav-item">
        <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark logout">Logout</button>
        </form>
    </li>
}
else
{
    @* Check if the current page is not the Register page *@
    @if (!(ViewContext.RouteData.Values["controller"]!.ToString() == "Account" && ViewContext.RouteData.Values["action"]!.ToString() == "Register"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
    }
    @* Check if the current page is not the Login page *@
    @if (!(ViewContext.RouteData.Values["controller"]!.ToString() == "Account" && ViewContext.RouteData.Values["action"]!.ToString() == "Login"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
}
</ul>
